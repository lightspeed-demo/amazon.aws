---
- module_defaults:
    group/aws:
      access_key: "{{ aws_access_key }}"
      secret_key: "{{ aws_secret_key }}"
      session_token: "{{ security_token | default(omit) }}"
      region: "{{ aws_region }}"
  block:
    - name: Make instance in a default subnet of the VPC
      register: in_default_vpc
      amazon.aws.ec2_instance:
        state: present
        name: "{{ resource_prefix }}-test-default-vpc"
        image_id: "{{ ec2_ami_id }}"
        tags:
          TestId: "{{ ec2_instance_tag_TestId }}"
        security_group: default
        instance_type: "{{ ec2_instance_type }}"
        wait: false

    - name: Make instance in a default subnet of the VPC(check mode)
      check_mode: true
      amazon.aws.ec2_instance:
        state: present
        name: "{{ resource_prefix }}-test-default-vpc-checkmode"
        image_id: "{{ ec2_ami_id }}"
        tags:
          TestId: "{{ ec2_instance_tag_TestId }}"
        security_group: default
        instance_type: "{{ ec2_instance_type }}"

    - name: fact presented ec2 instance
      register: presented_instance_fact
      amazon.aws.ec2_instance_info:
        filters:

    - name: fact checkmode ec2 instance
      register: checkmode_instance_fact
      amazon.aws.ec2_instance_info:
        filters:

    - name: Confirm whether the check mode is working normally.
      ansible.builtin.assert:
        that:
          - "{{ presented_instance_fact.instances | length }} > 0"
          - "{{ checkmode_instance_fact.instances | length }} == 0"

    - name: Terminate instances
      ec2_instance:
        state: absent
        instance_ids: "{{ in_default_vpc.instance_ids }}"
        tags:
          TestId: "{{ ec2_instance_tag_TestId }}"

    - name: Terminate vpc_tests instances
      ignore_errors: true
      amazon.aws.ec2_instance:
        state: absent
        filters:
        wait: true
