---
- module_defaults:
    group/aws:
      access_key: "{{ aws_access_key }}"
      secret_key: "{{ aws_secret_key }}"
      session_token: "{{ security_token | default(omit) }}"
      region: "{{ aws_region }}"
  block:
    - name: create t3.nano instance
      amazon.aws.ec2_instance:
        state: running
        name: "{{ resource_prefix }}-test-uptime"
        region: "{{ aws_region }}"
        image_id: "{{ ec2_ami_id }}"
        tags:
          TestId: "{{ ec2_instance_tag_TestId }}"
        vpc_subnet_id: "{{ testing_subnet_a.subnet.id }}"
        instance_type: t3.nano
        wait: true

    - name: check ec2 instance
      register: instance_facts
      amazon.aws.ec2_instance_info:
        filters:
          instance-state-name:

    - name: Confirm existence of instance id.
      ansible.builtin.assert:
        that:
          - "{{ instance_facts.instances | length }} == 1"

    - name: check using uptime 100 hours - should find nothing
      register: instance_facts
      amazon.aws.ec2_instance_info:
        region: "{{ aws_region }}"
        uptime: 6000
        filters:
          instance-state-name:

    - name: Confirm there is no running instance
      ansible.builtin.assert:
        that:
          - "{{ instance_facts.instances | length }} == 0"

    - name: Sleep for 61 seconds and continue with play
      delegate_to: localhost
      ansible.builtin.wait_for:
        timeout: 61

    - name: check using uptime 1 minute
      register: instance_facts
      amazon.aws.ec2_instance_info:
        region: "{{ aws_region }}"
        uptime: 1
        filters:
          instance-state-name:

    - name: Confirm there is one running instance
      ansible.builtin.assert:
        that:
          - "{{ instance_facts.instances | length }} == 1"
