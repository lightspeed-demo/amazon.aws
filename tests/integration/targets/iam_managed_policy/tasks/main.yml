---
- name: Run integration tests for IAM managed policy
  module_defaults:
    group/aws:
      access_key: "{{ aws_access_key }}"
      secret_key: "{{ aws_secret_key }}"
      session_token: "{{ security_token | default(omit) }}"
      region: "{{ aws_region }}"
  collections:
    - amazon.aws
  block:
    ## Test policy creation

    - name: Create IAM managed policy - check mode
      register: result
      check_mode: true
      community.aws.iam_managed_policy:
        policy_name: "{{ policy_name }}"
        policy:
          Version: "2012-10-17"
          Statement:
            - Effect: Deny
              Action: logs:CreateLogGroup
              Resource: "*"
        state: present

    - name: Create IAM managed policy - check mode
      ansible.builtin.assert:
        that:
          - result.changed

    - name: Create IAM managed policy
      register: result
      community.aws.iam_managed_policy:
        policy_name: "{{ policy_name }}"
        policy:
          Version: "2012-10-17"
          Statement:
            - Effect: Deny
              Action: logs:CreateLogGroup
              Resource: "*"
        state: present

    - name: Create IAM managed policy
      ansible.builtin.assert:
        that:
          - result.changed
          - result.policy.policy_name == policy_name

    - name: Create IAM managed policy - idempotency check
      register: result
      community.aws.iam_managed_policy:
        policy_name: "{{ policy_name }}"
        policy:
          Version: "2012-10-17"
          Statement:
            - Effect: Deny
              Action: logs:CreateLogGroup
              Resource: "*"
        state: present

    - name: Create IAM managed policy - idempotency check
      ansible.builtin.assert:
        that:
          - not result.changed

    - name: Update IAM managed policy - check mode
      register: result
      check_mode: true
      community.aws.iam_managed_policy:
        policy_name: "{{ policy_name }}"
        policy:
          Version: "2012-10-17"
          Statement:
            - Effect: Deny
              Action: logs:Describe*
              Resource: "*"
        state: present

    - name: Update IAM managed policy - check mode
      ansible.builtin.assert:
        that:
          - result.changed

    - name: Update IAM managed policy
      register: result
      community.aws.iam_managed_policy:
        policy_name: "{{ policy_name }}"
        policy:
          Version: "2012-10-17"
          Statement:
            - Effect: Deny
              Action: logs:Describe*
              Resource: "*"
        state: present

    - name: Update IAM managed policy
      ansible.builtin.assert:
        that:
          - result.changed
          - result.policy.policy_name == policy_name

    - name: Update IAM managed policy - idempotency check
      register: result
      community.aws.iam_managed_policy:
        policy_name: "{{ policy_name }}"
        policy:
          Version: "2012-10-17"
          Statement:
            - Effect: Deny
              Action: logs:Describe*
              Resource: "*"
        state: present

    - name: Update IAM managed policy - idempotency check
      ansible.builtin.assert:
        that:
          - not result.changed

    - name: Delete IAM managed policy - check mode
      register: result
      check_mode: true
      community.aws.iam_managed_policy:
        policy_name: "{{ policy_name }}"
        state: absent

    - name: Delete IAM managed policy - check mode
      ansible.builtin.assert:
        that:
          - result.changed

    - name: Delete IAM managed policy
      register: result
      community.aws.iam_managed_policy:
        policy_name: "{{ policy_name }}"
        state: absent

    - name: Delete IAM managed policy
      ansible.builtin.assert:
        that:
          - result.changed

    - name: Delete IAM managed policy - idempotency check
      register: result
      community.aws.iam_managed_policy:
        policy_name: "{{ policy_name }}"
        state: absent

    - name: Delete IAM managed policy - idempotency check
      assert:
        that:
          - not result.changed

    - name: Delete IAM managed policy
      ignore_errors: true
      community.aws.iam_managed_policy:
        policy_name: "{{ policy_name }}"
        state: absent
