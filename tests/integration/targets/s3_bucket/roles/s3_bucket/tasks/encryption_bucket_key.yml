---
- module_defaults:
    group/aws:
      access_key: "{{ aws_access_key }}"
      secret_key: "{{ aws_secret_key }}"
      session_token: "{{ security_token | default(omit) }}"
      region: "{{ aws_region }}"
  block:
    - name: Set facts for encryption_bucket_key test
      ansible.builtin.set_fact:
        local_bucket_name: "{{ bucket_name | hash('md5') }}-bucket-key"
    # ============================================================

    - name: Create a simple bucket
      register: output
      amazon.aws.s3_bucket:
        name: "{{ local_bucket_name }}"
        state: present

    - name: Enable aws:kms encryption with KMS master key
      register: output
      amazon.aws.s3_bucket:
        name: "{{ local_bucket_name }}"
        state: present
        encryption: aws:kms

    - name: Enable bucket key for bucket with aws:kms encryption
      register: output
      amazon.aws.s3_bucket:
        name: "{{ local_bucket_name }}"
        state: present
        encryption: aws:kms
        bucket_key_enabled: true

    - name: Assert for 'Enable bucket key for bucket with aws:kms encryption'
      ansible.builtin.assert:
        that:
          - output.changed
          - output.encryption

    - name: Re-enable bucket key for bucket with aws:kms encryption (idempotent)
      register: output
      amazon.aws.s3_bucket:
        name: "{{ local_bucket_name }}"
        encryption: aws:kms
        bucket_key_enabled: true

    - name: Assert for 'Re-enable bucket key for bucket with aws:kms encryption (idempotent)'
      ansible.builtin.assert:
        that:
          - not output.changed
          - output.encryption

    - name: Delete encryption test s3 bucket
      register: output
      amazon.aws.s3_bucket:
        name: "{{ local_bucket_name }}"
        state: absent

    - name: Assert for 'Delete encryption test s3 bucket'
      assert:
        that:
          - output.changed

    # ============================================================

    - name: Ensure all buckets are deleted
      failed_when: false
      amazon.aws.s3_bucket:
        name: "{{ local_bucket_name }}"
        state: absent
