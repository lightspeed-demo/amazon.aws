---
- run_once: '{{ setup_run_once | default("no") | bool }}'
  module_defaults:
    group/aws:
      access_key: "{{ aws_access_key }}"
      secret_key: "{{ aws_secret_key }}"
      session_token: "{{ security_token | default(omit) }}"
      region: "{{ aws_region }}"
  block:
    - name: Create VPC for use in testing
      register: testing_vpc
      notify:
        - Delete ec2_instance environment
      amazon.aws.ec2_vpc_net:
        state: present
        name: "{{ vpc_name }}"
        cidr_block: "{{ vpc_cidr }}"
        tags:
          Name: "{{ vpc_name }}"
        tenancy: default

    - name: Create default subnet in zone A
      register: testing_subnet_a
      amazon.aws.ec2_vpc_subnet:
        state: present
        vpc_id: "{{ testing_vpc.vpc.id }}"
        cidr: "{{ subnet_a_cidr }}"
        az: "{{ subnet_a_az }}"
        resource_tags:
          Name: "{{ subnet_a_name }}"

    - name: Create secondary subnet in zone B
      register: testing_subnet_b
      amazon.aws.ec2_vpc_subnet:
        state: present
        vpc_id: "{{ testing_vpc.vpc.id }}"
        cidr: "{{ subnet_b_cidr }}"
        az: "{{ subnet_b_az }}"
        resource_tags:
          Name: "{{ subnet_b_name }}"

    - name: create a security group with the vpc
      register: sg
      amazon.aws.ec2_security_group:
        state: present
        name: "{{ security_group_name_1 }}"
        description: a security group for ansible tests
        vpc_id: "{{ testing_vpc.vpc.id }}"
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: "0.0.0.0/0"
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: "0.0.0.0/0"

    - name: create secondary security group with the vpc
      register: sg2
      amazon.aws.ec2_security_group:
        name: "{{ security_group_name_2 }}"
        description: a secondary security group for ansible tests
        vpc_id: "{{ testing_vpc.vpc.id }}"
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: "0.0.0.0/0"
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: "0.0.0.0/0"

    - name: Preserve defaults for other roles
      ansible.builtin.set_fact:
      # Ensure variables are available outside of this role
        vpc_cidr: "{{ vpc_cidr }}"
        vpc_name: "{{ vpc_name }}"
        subnet_a_az: "{{ subnet_a_az }}"
        subnet_a_cidr: "{{ subnet_a_cidr }}"
        subnet_a_startswith: "{{ subnet_a_startswith }}"
        subnet_a_name: "{{ subnet_a_name }}"
        subnet_b_az: "{{ subnet_b_az }}"
        subnet_b_cidr: "{{ subnet_b_cidr }}"
        subnet_b_startswith: "{{ subnet_b_startswith }}"
        subnet_b_name: "{{ subnet_b_name }}"
        security_group_name_1: "{{ security_group_name_1 }}"
        security_group_name_2: "{{ security_group_name_2 }}"
